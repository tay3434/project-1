{
  "schema_version": "1.0.0",
  "classes": [
    {
      "description": "`video-player`\n`A simple responsive video player with ridiculously powerful backing`",
      "summary": "",
      "path": "video-player.js",
      "properties": [
        {
          "name": "html5",
          "type": "object",
          "description": "gets the HTML5 `audio` or `video` children",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 602,
              "column": 2
            },
            "end": {
              "line": 623,
              "column": 3
            }
          },
          "metadata": {}
        },
        {
          "name": "iframed",
          "type": "Boolean",
          "description": "Computes whether uses iframe",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 630,
              "column": 2
            },
            "end": {
              "line": 643,
              "column": 3
            }
          },
          "metadata": {}
        },
        {
          "name": "isA11yMedia",
          "type": "Boolean",
          "description": "Determines if compatible with `a11y-media-player`",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 650,
              "column": 2
            },
            "end": {
              "line": 660,
              "column": 3
            }
          },
          "metadata": {}
        },
        {
          "name": "observer",
          "type": "object",
          "description": "mutation observer for tabs",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 666,
              "column": 2
            },
            "end": {
              "line": 669,
              "column": 3
            }
          },
          "metadata": {}
        },
        {
          "name": "sandboxed",
          "type": "Boolean",
          "description": "Compute sandboxed status",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 676,
              "column": 2
            },
            "end": {
              "line": 699,
              "column": 3
            }
          },
          "metadata": {}
        },
        {
          "name": "sourceProperties",
          "type": "Array",
          "description": "Gets cleaned source list from source and sources properties",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 705,
              "column": 2
            },
            "end": {
              "line": 717,
              "column": 3
            }
          },
          "metadata": {}
        },
        {
          "name": "trackProperties",
          "type": "Array",
          "description": "Gets cleaned track list from track and tracks properties",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 724,
              "column": 2
            },
            "end": {
              "line": 737,
              "column": 3
            }
          },
          "metadata": {}
        },
        {
          "name": "sourceData",
          "type": "Array",
          "description": "Source properties and slotted sources",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 744,
              "column": 2
            },
            "end": {
              "line": 755,
              "column": 3
            }
          },
          "metadata": {}
        },
        {
          "name": "audioOnly",
          "type": "?",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 757,
              "column": 2
            },
            "end": {
              "line": 762,
              "column": 3
            }
          },
          "metadata": {}
        },
        {
          "name": "standAlone",
          "type": "?",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 764,
              "column": 2
            },
            "end": {
              "line": 770,
              "column": 3
            }
          },
          "metadata": {}
        },
        {
          "name": "trackData",
          "type": "Array",
          "description": "Gets cleaned track list",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 777,
              "column": 2
            },
            "end": {
              "line": 802,
              "column": 3
            }
          },
          "metadata": {}
        },
        {
          "name": "youtubeId",
          "type": "String",
          "description": "Gets Youtube ID from source string",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 809,
              "column": 2
            },
            "end": {
              "line": 821,
              "column": 3
            }
          },
          "metadata": {}
        },
        {
          "name": "playerId",
          "type": "string",
          "description": "gets an id for a11y-media-player",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 828,
              "column": 2
            },
            "end": {
              "line": 830,
              "column": 3
            }
          },
          "metadata": {}
        },
        {
          "name": "currentTime",
          "type": "?",
          "description": "mapping down into the shadowRoot element bc these are common things to want to know\n   ",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 1025,
              "column": 2
            },
            "end": {
              "line": 1030,
              "column": 3
            }
          },
          "metadata": {}
        }
      ],
      "methods": [
        {
          "name": "render",
          "description": "render function",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 91,
              "column": 2
            },
            "end": {
              "line": 168,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "querySelectorAll",
          "description": "weird looking but allows for SSR support",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 542,
              "column": 2
            },
            "end": {
              "line": 547,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "query"
            }
          ]
        },
        {
          "name": "disconnectedCallback",
          "description": "life cycle, element is removed from the DOM",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 589,
              "column": 2
            },
            "end": {
              "line": 596,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeMediaType",
          "description": "Compute media type based on source, i.e. 'audio/wav' for '.wav'",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 835,
              "column": 2
            },
            "end": {
              "line": 854,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "source"
            }
          ]
        },
        {
          "name": "_computeSRC",
          "description": "Compute src from type / source combo.\nType is set by source so this ensures a waterfall\nof valid values.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 861,
              "column": 2
            },
            "end": {
              "line": 892,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "source"
            },
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "haxHooks",
          "description": "Implements haxHooks to tie into life-cycle if hax exists.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 896,
              "column": 2
            },
            "end": {
              "line": 901,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "haxinlineContextMenu",
          "description": "add buttons when it is in context",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 906,
              "column": 2
            },
            "end": {
              "line": 914,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "ceMenu"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "haxClickTimeCode",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 915,
              "column": 2
            },
            "end": {
              "line": 919,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ]
        },
        {
          "name": "haxpostProcessNodeToContent",
          "description": "postProcesshaxNodeToContent - clean up so we don't have empty array data",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 923,
              "column": 2
            },
            "end": {
              "line": 927,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "content"
            }
          ]
        },
        {
          "name": "setSourceData",
          "description": "triggers an update of sourceData property when slot changes",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 933,
              "column": 2
            },
            "end": {
              "line": 948,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "playEvent",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 949,
              "column": 2
            },
            "end": {
              "line": 951,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "pauseEvent",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 952,
              "column": 2
            },
            "end": {
              "line": 954,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "updated",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 956,
              "column": 2
            },
            "end": {
              "line": 979,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProperties"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "firstUpdated",
          "description": "LitElement lifecycle",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 984,
              "column": 2
            },
            "end": {
              "line": 1021,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProperties"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "restart",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 1031,
              "column": 2
            },
            "end": {
              "line": 1035,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "pause",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 1036,
              "column": 2
            },
            "end": {
              "line": 1043,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "play",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 1044,
              "column": 2
            },
            "end": {
              "line": 1051,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "seek",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 1052,
              "column": 2
            },
            "end": {
              "line": 1061,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "time"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_visChange",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1062,
              "column": 2
            },
            "end": {
              "line": 1080,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        },
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 22,
          "column": 0
        },
        "end": {
          "line": 1081,
          "column": 1
        }
      },
      "privacy": "public",
      "name": "VideoPlayer"
    }
  ]
}
