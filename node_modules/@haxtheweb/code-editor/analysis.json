{
  "schema_version": "1.0.0",
  "classes": [
    {
      "description": "`code-editor`\n`Wrapper on top of a code editor`",
      "summary": "",
      "path": "code-editor.js",
      "properties": [
        {
          "name": "placeholder",
          "type": "?",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 215,
              "column": 2
            },
            "end": {
              "line": 218,
              "column": 3
            }
          },
          "metadata": {}
        }
      ],
      "methods": [
        {
          "name": "render",
          "description": "LitElement render",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 162,
              "column": 2
            },
            "end": {
              "line": 201,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "getTheme",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 203,
              "column": 2
            },
            "end": {
              "line": 213,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "theme"
            }
          ]
        },
        {
          "name": "updated",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 337,
              "column": 2
            },
            "end": {
              "line": 388,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProperties"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeCodePenData",
          "description": "Update the post data whenever the editor has been updated",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 392,
              "column": 2
            },
            "end": {
              "line": 398,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "title"
            },
            {
              "name": "editorValue"
            }
          ]
        },
        {
          "name": "_handleFocus",
          "description": "sets focused attribute when monaco-elements's focus event fires",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 403,
              "column": 2
            },
            "end": {
              "line": 405,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "event",
              "description": "the monaco-elements's focus event"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_handleBlur",
          "description": "unsets focused attribute when monaco-elements's blur event fires",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 410,
              "column": 2
            },
            "end": {
              "line": 412,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "event",
              "description": "the monaco-elements's blur event"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_modeChanged",
          "description": "LEGACY: pass down mode to language if that api is used",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 416,
              "column": 2
            },
            "end": {
              "line": 418,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_editorDataChanged",
          "description": "Notice code editor changes and reflect them into this element",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 423,
              "column": 2
            },
            "end": {
              "line": 426,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "updateEditorValue",
          "description": "Calculate what's in slot currently and then inject it into the editor.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 431,
              "column": 2
            },
            "end": {
              "line": 452,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_editorValueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 453,
              "column": 2
            },
            "end": {
              "line": 459,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "haxHooks",
          "description": "Implements haxHooks to tie into life-cycle if hax exists.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 463,
              "column": 2
            },
            "end": {
              "line": 468,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "haxactiveElementChanged",
          "description": "allow HAX to toggle edit state when activated",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 472,
              "column": 2
            },
            "end": {
              "line": 482,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "el"
            },
            {
              "name": "val"
            }
          ]
        },
        {
          "name": "haxpreProcessNodeToContent",
          "description": "Ensure fields don't pass through to HAX if in that context",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 486,
              "column": 2
            },
            "end": {
              "line": 493,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "getValueAsNode",
          "description": "return HTML object of table data",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 498,
              "column": 2
            },
            "end": {
              "line": 518,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "wrap",
              "defaultValue": "null"
            }
          ],
          "return": {
            "type": "object",
            "desc": "HTML object for managed table"
          }
        },
        {
          "name": "connectedCallback",
          "description": "attached life cycle",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 522,
              "column": 2
            },
            "end": {
              "line": 528,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 529,
              "column": 2
            },
            "end": {
              "line": 535,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "editorReady",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 536,
              "column": 2
            },
            "end": {
              "line": 550,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        },
        {
          "url": "demo/updating.html",
          "description": "Update contents"
        },
        {
          "url": "demo/index.html",
          "description": ""
        },
        {
          "url": "demo/updating.html",
          "description": "Update contents"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 27,
          "column": 0
        },
        "end": {
          "line": 551,
          "column": 1
        }
      },
      "privacy": "public",
      "name": "CodeEditor"
    }
  ]
}
