{
  "version": 1,
  "tags": [
    {
      "name": "a11y-tabs",
      "description": "`a11y-tabs`\nan accessible and responsive tabbed interface\n\n### Styling\n\n`<a11y-tabs>` provides the following custom properties\nfor styling:\n\n#### General\nCustom property | Description | Default\n----------------|-------------|----------\n`--a11y-tabs-font-family` | font-family | unset\n`--a11y-tabs-font-size` | font-size | unset\n`--a11y-tabs-border-color` | border | #ddd\n`--a11y-tabs-color` | text color | #222\n`--a11y-tabs-focus-color` | text color when focused | #000\n`--a11y-tabs-margin` |  | 16px 0\n`--a11y-tabs-width` | total width | 100%\n`--a11y-tabs-height` | total height | unset\n`--a11y-tabs-overflow` | default overflow | auto\n`--a11y-tabs-overflow-x` | overflow of x-axis | `--a11y-tabs-overflow`\n`--a11y-tabs-overflow-y` | overflow of y-axis | `--a11y-tabs-overflow`\n`--a11y-tabs-border-radius` | default border radius | 2px\n`--a11y-tabs-horizontal-border-radius` | border-radius when horizontal | `--a11y-tabs-border-radius`\n`--a11y-tabs-vertical-border-radius` | border-radius when veritcal | `--a11y-tabs-border-radius`\n`--a11y-tabs-text-decoration` | default text decoration for tab button | none\n`--a11y-tabs-focus-text-decoration` | default text on focus or hover | underline\n\n#### Tab Panel\nCustom property | Description | Default\n----------------|-------------|----------\n`--a11y-tabs-tab-font-family` | font-family | `--a11y-tabs-font-family`\n`--a11y-tabs-tab-font-size` | font-size | `--a11y-tabs-font-size`\n`--a11y-tabs-font-weight` | default font weight | normal\n`--a11y-tabs-selected-font-weight` | font weight of selected tabs | normal\n`--a11y-tabs-focus-font-weight` | font weight of focused/hovered tabs | normal\n`--a11y-tabs-text-decoration` | default text-decoration | none\n`--a11y-tabs-focus-text-decoration` | text-decoration when focused/hovered | underline\n`--a11y-tabs-selected-text-decoration` | text-decoration when selected | none\n`--a11y-tabs-color` | default text color | #000\n`--a11y-tabs-focus-color` | text color of focused/hovered tab | --a11y-tabs-color`\n`--a11y-tabs-faded-color` | text color of disabled items |  #333;\n`--a11y-tabs-selected-color` | text color of selected tab | `--a11y-tabs-focus-color`\n`--a11y-tabs-background` | background for active tab and tab content | white\n`--a11y-tabs-faded-background` | background inactive tabs | #eee\n`--a11y-tabs-horizontal-background` | background for tabs container when horizontal | unset\n`--a11y-tabs-vertical-background` | background for tabs container when vertical | `--a11y-tabs-border-color`\n`--a11y-tabs-horizontal-sticky-background` | background for tabs container when sticky and horizontal | `--a11y-tabs-background`\n`--a11y-tabs-justify-tabs` | tab justification | flex-start\n`--a11y-tabs-vertical-justify-tabs` | tab justification when vertical | `--a11y-tabs-justify-tabs`\n`--a11y-tabs-horizontal-justify-tabs` | tab justification when horizontal | `--a11y-tabs-justify-tabs`\n`--a11y-tabs-wrap` | tab wrapping | unset\n`--a11y-tabs-tab-height` | tab height | `--a11y-tabs-height`\n`--a11y-tabs-button-padding` | padding for tabs | 8px\n`--a11y-tabs-vertical-button-padding` | padding for tabs when vertical | `--a11y-tabs-button-padding`\n`--a11y-tabs-horizontal-button-padding` | padding for tabs when horizontal | `--a11y-tabs-button-padding`\n`--a11y-tabs-border-accent` | optional thicker border for top of horizontal tabs or left of vertical tabs (ex. 4px solid blue) | unset\n`--a11y-tabs-selected-border-accent` | optional thicker border for top of selected horizontal tab or left of vertical tab | unset\n`--a11y-tabs-selected-focus-accent` | optional thicker border for top of focused/hovered horizontal tab or left of vertical tab | unset\n`--a11y-tabs-selected-disabled-accent` | optional thicker border for top of disabled horizontal tabs or left of vertical tabs | unset\n\n#### Content Section\nCustom property | Description | Default\n----------------|-------------|----------\n`--a11y-tabs-content-padding` | padding for content of tab | 16px\n`--a11y-tabs-content-background` | background color for content of tab | `--a11y-tabs-background`\n\nEvents:\n\n  * `a11y-tabs-active-changed` {`CustomEvent<this>`} - \n\n  * `responsive-element` {`CustomEvent<{ attribute: string; custom: string; element: this; sm: number; md: number; lg: number; xl: number; }>`} - \n\n  * `responsive-element-deleted` {`CustomEvent<this>`} - \n\nAttributes:\n\n  * `aria-label` {`string`} - \n\n  * `active-tab` {`string`} - id of active tab\n\n  * `icon-breakpoint` {`number`} - Optional minimum breakpoint for showing tab text with icons, or\nDefault is always text with icons.\n`-1` forces icon-only mode.\n\n  * `id` {`string`} - unique identifier/anchor for tabbed interface\n\n  * `layout-breakpoint` {`number`} - Optional minimum breakpoint for horizontal layout of tabs.\nDefault is unset (always horizontal).\n`-1` forces vertical-only mode.\n\n  * `sticky` {`boolean`} - whether tabs are sticky\n\n  * `__tabButtons` {`any[]`} - an array of tab buttons\n\n  * `full-width` {`boolean`} - if tabs should be full width or not\n\n  * `disabled` {`boolean`} - whether tabbed interface is disabled\n\n  * `hidden` {`boolean`} - whether tabbed interface is hidden\n\n  * `__tabs` {`any[]`} - an array of tab data based on slotted `a11y-tab` elements\n\n  * `__tabFocus` {`number`} - which tab button has ketboard focus\n\n  * `responsive-width` {`number`} - width in pixels\n\n  * `responsive-size` {`string`} - size of tabs,\nwhere `xs` is smaller breakpoint\nand `xs` is larger breakpoint\n\n  * `sm` {`number`} - Miniumum value for small breakpoint\n\n  * `md` {`number`} - Miniumum value for medium breakpoint\n\n  * `lg` {`number`} - Miniumum value for large breakpoint\n\n  * `xl` {`number`} - Miniumum value for extra-large breakpoint\n\n  * `disable-responsive` {`boolean`} - \n\nProperties:\n\n  * `ariaLabel` {`string`} - \n\n  * `activeTab` {`string`} - id of active tab\n\n  * `iconBreakpoint` {`number`} - Optional minimum breakpoint for showing tab text with icons, or\nDefault is always text with icons.\n`-1` forces icon-only mode.\n\n  * `id` {`string`} - unique identifier/anchor for tabbed interface\n\n  * `layoutBreakpoint` {`number`} - Optional minimum breakpoint for horizontal layout of tabs.\nDefault is unset (always horizontal).\n`-1` forces vertical-only mode.\n\n  * `sticky` {`boolean`} - whether tabs are sticky\n\n  * `__tabButtons` {`any[]`} - an array of tab buttons\n\n  * `buttons` {`NodeListOf<Element> | undefined`} - \n\n  * `iconsOnly` {`boolean`} - determines if tabs should show icons only\n\n  * `observer` - mutation observer for tabs\n\n  * `tabQuery` {`string`} - query selector for tabs\noverride this for custom elements that extend a11y-tabs\n\n  * `tabs` - array of tabs\n\n  * `vertical` {`boolean`} - determines whether tabs should be in vertical layout\n\n  * `fullWidth` {`boolean`} - if tabs should be full width or not\n\n  * `disabled` {`boolean`} - whether tabbed interface is disabled\n\n  * `hidden` {`boolean`} - whether tabbed interface is hidden\n\n  * `__tabs` {`any[]`} - an array of tab data based on slotted `a11y-tab` elements\n\n  * `__tabFocus` {`number`} - which tab button has ketboard focus\n\n  * `responsiveWidth` {`number`} - width in pixels\n\n  * `responsiveSize` {`string`} - size of tabs,\nwhere `xs` is smaller breakpoint\nand `xs` is larger breakpoint\n\n  * `sm` {`number`} - Miniumum value for small breakpoint\n\n  * `md` {`number`} - Miniumum value for medium breakpoint\n\n  * `lg` {`number`} - Miniumum value for large breakpoint\n\n  * `xl` {`number`} - Miniumum value for extra-large breakpoint\n\n  * `disableResponsive` {`boolean`} - ",
      "attributes": [
        {
          "name": "aria-label",
          "description": "`aria-label` {`string`} - \n\nProperty: ariaLabel"
        },
        {
          "name": "active-tab",
          "description": "`active-tab` {`string`} - id of active tab\n\nProperty: activeTab"
        },
        {
          "name": "icon-breakpoint",
          "description": "`icon-breakpoint` {`number`} - Optional minimum breakpoint for showing tab text with icons, or\nDefault is always text with icons.\n`-1` forces icon-only mode.\n\nProperty: iconBreakpoint"
        },
        {
          "name": "id",
          "description": "`id` {`string`} - unique identifier/anchor for tabbed interface\n\nProperty: id"
        },
        {
          "name": "layout-breakpoint",
          "description": "`layout-breakpoint` {`number`} - Optional minimum breakpoint for horizontal layout of tabs.\nDefault is unset (always horizontal).\n`-1` forces vertical-only mode.\n\nProperty: layoutBreakpoint"
        },
        {
          "name": "sticky",
          "description": "`sticky` {`boolean`} - whether tabs are sticky\n\nProperty: sticky",
          "valueSet": "v"
        },
        {
          "name": "__tabButtons",
          "description": "`__tabButtons` {`any[]`} - an array of tab buttons\n\nProperty: __tabButtons"
        },
        {
          "name": "full-width",
          "description": "`full-width` {`boolean`} - if tabs should be full width or not\n\nProperty: fullWidth\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "disabled",
          "description": "`disabled` {`boolean`} - whether tabbed interface is disabled\n\nProperty: disabled\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "hidden",
          "description": "`hidden` {`boolean`} - whether tabbed interface is hidden\n\nProperty: hidden\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "__tabs",
          "description": "`__tabs` {`any[]`} - an array of tab data based on slotted `a11y-tab` elements\n\nProperty: __tabs\n\nDefault: "
        },
        {
          "name": "__tabFocus",
          "description": "`__tabFocus` {`number`} - which tab button has ketboard focus\n\nProperty: __tabFocus\n\nDefault: 0"
        },
        {
          "name": "responsive-width",
          "description": "`responsive-width` {`number`} - width in pixels\n\nProperty: responsiveWidth"
        },
        {
          "name": "responsive-size",
          "description": "`responsive-size` {`string`} - size of tabs,\nwhere `xs` is smaller breakpoint\nand `xs` is larger breakpoint\n\nProperty: responsiveSize\n\nDefault: xs"
        },
        {
          "name": "sm",
          "description": "`sm` {`number`} - Miniumum value for small breakpoint\n\nProperty: sm\n\nDefault: 600"
        },
        {
          "name": "md",
          "description": "`md` {`number`} - Miniumum value for medium breakpoint\n\nProperty: md\n\nDefault: 900"
        },
        {
          "name": "lg",
          "description": "`lg` {`number`} - Miniumum value for large breakpoint\n\nProperty: lg\n\nDefault: 1200"
        },
        {
          "name": "xl",
          "description": "`xl` {`number`} - Miniumum value for extra-large breakpoint\n\nProperty: xl\n\nDefault: 1500"
        },
        {
          "name": "disable-responsive",
          "description": "`disable-responsive` {`boolean`} - \n\nProperty: disableResponsive\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "ona11y-tabs-active-changed",
          "description": "`a11y-tabs-active-changed` {`CustomEvent<this>`} - "
        },
        {
          "name": "onresponsive-element",
          "description": "`responsive-element` {`CustomEvent<{ attribute: string; custom: string; element: this; sm: number; md: number; lg: number; xl: number; }>`} - "
        },
        {
          "name": "onresponsive-element-deleted",
          "description": "`responsive-element-deleted` {`CustomEvent<this>`} - "
        }
      ]
    },
    {
      "name": "a11y-tab",
      "description": "`a11y-tab`\na single tab within `a11y-tabs`\n\n### Styling\n\n`<a11y-tab>` provides the following custom properties\nfor styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--a11y-tabs-tab-height` | tab height | `--a11y-tabs-height`\n`--a11y-tabs-tab-overflow` | tab overflow | `--a11y-tabs-overflow`\n\nEvents:\n\n  * `a11y-tab-changed` {`CustomEvent<this>`} - \n\nAttributes:\n\n  * `aria-labelledby` {`string`} - \n\n  * `flag-icon` {`string`} - optional flag icon the tab, eg. `av:fiber-new`, `icons:warning`, or `icons:error`\n\n  * `icon` {`string`} - icon for this tab, eg. `maps:local-airport`, `maps:local-bar`, or `notification:wifi`\n\n  * `id` {`string`} - the unique identifier and anchor for the tab\n\n  * `inactive` {`boolean`} - whether the tab is hidden\n\n  * `label` {`string`} - label for the tab\n\n  * `disabled` {`boolean`} - whether the tabbed interface is disabled\n\n  * `order` {`number`} - order of the tab\n\n  * `role` {`string`} - \n\n  * `total` {`number`} - total number of tabs\n\n  * `tabindex` {`number`} - total number of tabs\n\n  * `flag` {`string`} - optional flag the tab, eg. `new`, `alert`, or `error`\n\nProperties:\n\n  * `ariaLabelledby` {`string`} - \n\n  * `flagIcon` {`string`} - optional flag icon the tab, eg. `av:fiber-new`, `icons:warning`, or `icons:error`\n\n  * `icon` {`string`} - icon for this tab, eg. `maps:local-airport`, `maps:local-bar`, or `notification:wifi`\n\n  * `id` {`string`} - the unique identifier and anchor for the tab\n\n  * `inactive` {`boolean`} - whether the tab is hidden\n\n  * `label` {`string`} - label for the tab\n\n  * `observer` - returns mutation observer\n\n  * `xOfY` {`string`} - gets x of y string\n\n  * `disabled` {`boolean`} - whether the tabbed interface is disabled\n\n  * `hidden` {`boolean`} - \n\n  * `order` {`number`} - order of the tab\n\n  * `role` {`string`} - \n\n  * `total` {`number`} - total number of tabs\n\n  * `tabindex` {`number`} - total number of tabs\n\n  * `flag` {`string`} - optional flag the tab, eg. `new`, `alert`, or `error`",
      "attributes": [
        {
          "name": "aria-labelledby",
          "description": "`aria-labelledby` {`string`} - \n\nProperty: ariaLabelledby"
        },
        {
          "name": "flag-icon",
          "description": "`flag-icon` {`string`} - optional flag icon the tab, eg. `av:fiber-new`, `icons:warning`, or `icons:error`\n\nProperty: flagIcon"
        },
        {
          "name": "icon",
          "description": "`icon` {`string`} - icon for this tab, eg. `maps:local-airport`, `maps:local-bar`, or `notification:wifi`\n\nProperty: icon"
        },
        {
          "name": "id",
          "description": "`id` {`string`} - the unique identifier and anchor for the tab\n\nProperty: id"
        },
        {
          "name": "inactive",
          "description": "`inactive` {`boolean`} - whether the tab is hidden\n\nProperty: inactive",
          "valueSet": "v"
        },
        {
          "name": "label",
          "description": "`label` {`string`} - label for the tab\n\nProperty: label"
        },
        {
          "name": "disabled",
          "description": "`disabled` {`boolean`} - whether the tabbed interface is disabled\n\nProperty: disabled\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "order",
          "description": "`order` {`number`} - order of the tab\n\nProperty: order\n\nDefault: 1"
        },
        {
          "name": "role",
          "description": "`role` {`string`} - \n\nProperty: role\n\nDefault: tabpanel"
        },
        {
          "name": "total",
          "description": "`total` {`number`} - total number of tabs\n\nProperty: total\n\nDefault: 1"
        },
        {
          "name": "tabindex",
          "description": "`tabindex` {`number`} - total number of tabs\n\nProperty: tabindex\n\nDefault: 0"
        },
        {
          "name": "flag",
          "description": "`flag` {`string`} - optional flag the tab, eg. `new`, `alert`, or `error`\n\nProperty: flag\n\nDefault: "
        },
        {
          "name": "ona11y-tab-changed",
          "description": "`a11y-tab-changed` {`CustomEvent<this>`} - "
        }
      ]
    },
    {
      "name": "a11y-tabs",
      "description": "`a11y-tabs`\nan accessible and responsive tabbed interface\n\n### Styling\n\n`<a11y-tabs>` provides the following custom properties\nfor styling:\n\n#### General\nCustom property | Description | Default\n----------------|-------------|----------\n`--a11y-tabs-font-family` | font-family | unset\n`--a11y-tabs-font-size` | font-size | unset\n`--a11y-tabs-border-color` | border | #ddd\n`--a11y-tabs-color` | text color | #222\n`--a11y-tabs-focus-color` | text color when focused | #000\n`--a11y-tabs-margin` |  | 16px 0\n`--a11y-tabs-width` | total width | 100%\n`--a11y-tabs-height` | total height | unset\n`--a11y-tabs-overflow` | default overflow | auto\n`--a11y-tabs-overflow-x` | overflow of x-axis | `--a11y-tabs-overflow`\n`--a11y-tabs-overflow-y` | overflow of y-axis | `--a11y-tabs-overflow`\n`--a11y-tabs-border-radius` | default border radius | 2px\n`--a11y-tabs-horizontal-border-radius` | border-radius when horizontal | `--a11y-tabs-border-radius`\n`--a11y-tabs-vertical-border-radius` | border-radius when veritcal | `--a11y-tabs-border-radius`\n`--a11y-tabs-text-decoration` | default text decoration for tab button | none\n`--a11y-tabs-focus-text-decoration` | default text on focus or hover | underline\n\n#### Tab Panel\nCustom property | Description | Default\n----------------|-------------|----------\n`--a11y-tabs-tab-font-family` | font-family | `--a11y-tabs-font-family`\n`--a11y-tabs-tab-font-size` | font-size | `--a11y-tabs-font-size`\n`--a11y-tabs-font-weight` | default font weight | normal\n`--a11y-tabs-selected-font-weight` | font weight of selected tabs | normal\n`--a11y-tabs-focus-font-weight` | font weight of focused/hovered tabs | normal\n`--a11y-tabs-text-decoration` | default text-decoration | none\n`--a11y-tabs-focus-text-decoration` | text-decoration when focused/hovered | underline\n`--a11y-tabs-selected-text-decoration` | text-decoration when selected | none\n`--a11y-tabs-color` | default text color | #000\n`--a11y-tabs-focus-color` | text color of focused/hovered tab | --a11y-tabs-color`\n`--a11y-tabs-faded-color` | text color of disabled items |  #333;\n`--a11y-tabs-selected-color` | text color of selected tab | `--a11y-tabs-focus-color`\n`--a11y-tabs-background` | background for active tab and tab content | white\n`--a11y-tabs-faded-background` | background inactive tabs | #eee\n`--a11y-tabs-horizontal-background` | background for tabs container when horizontal | unset\n`--a11y-tabs-vertical-background` | background for tabs container when vertical | `--a11y-tabs-border-color`\n`--a11y-tabs-horizontal-sticky-background` | background for tabs container when sticky and horizontal | `--a11y-tabs-background`\n`--a11y-tabs-justify-tabs` | tab justification | flex-start\n`--a11y-tabs-vertical-justify-tabs` | tab justification when vertical | `--a11y-tabs-justify-tabs`\n`--a11y-tabs-horizontal-justify-tabs` | tab justification when horizontal | `--a11y-tabs-justify-tabs`\n`--a11y-tabs-wrap` | tab wrapping | unset\n`--a11y-tabs-tab-height` | tab height | `--a11y-tabs-height`\n`--a11y-tabs-button-padding` | padding for tabs | 8px\n`--a11y-tabs-vertical-button-padding` | padding for tabs when vertical | `--a11y-tabs-button-padding`\n`--a11y-tabs-horizontal-button-padding` | padding for tabs when horizontal | `--a11y-tabs-button-padding`\n`--a11y-tabs-border-accent` | optional thicker border for top of horizontal tabs or left of vertical tabs (ex. 4px solid blue) | unset\n`--a11y-tabs-selected-border-accent` | optional thicker border for top of selected horizontal tab or left of vertical tab | unset\n`--a11y-tabs-selected-focus-accent` | optional thicker border for top of focused/hovered horizontal tab or left of vertical tab | unset\n`--a11y-tabs-selected-disabled-accent` | optional thicker border for top of disabled horizontal tabs or left of vertical tabs | unset\n\n#### Content Section\nCustom property | Description | Default\n----------------|-------------|----------\n`--a11y-tabs-content-padding` | padding for content of tab | 16px\n`--a11y-tabs-content-background` | background color for content of tab | `--a11y-tabs-background`\n\nEvents:\n\n  * `a11y-tabs-active-changed` {`CustomEvent<this>`} - \n\n  * `responsive-element` {`CustomEvent<{ attribute: string; custom: string; element: this; sm: number; md: number; lg: number; xl: number; }>`} - \n\n  * `responsive-element-deleted` {`CustomEvent<this>`} - \n\nAttributes:\n\n  * `aria-label` {`string`} - \n\n  * `active-tab` {`string`} - id of active tab\n\n  * `icon-breakpoint` {`number`} - Optional minimum breakpoint for showing tab text with icons, or\nDefault is always text with icons.\n`-1` forces icon-only mode.\n\n  * `id` {`string`} - unique identifier/anchor for tabbed interface\n\n  * `layout-breakpoint` {`number`} - Optional minimum breakpoint for horizontal layout of tabs.\nDefault is unset (always horizontal).\n`-1` forces vertical-only mode.\n\n  * `sticky` {`boolean`} - whether tabs are sticky\n\n  * `__tabButtons` {`any[]`} - an array of tab buttons\n\n  * `full-width` {`boolean`} - if tabs should be full width or not\n\n  * `disabled` {`boolean`} - whether tabbed interface is disabled\n\n  * `hidden` {`boolean`} - whether tabbed interface is hidden\n\n  * `__tabs` {`any[]`} - an array of tab data based on slotted `a11y-tab` elements\n\n  * `__tabFocus` {`number`} - which tab button has ketboard focus\n\n  * `responsive-width` {`number`} - width in pixels\n\n  * `responsive-size` {`string`} - size of tabs,\nwhere `xs` is smaller breakpoint\nand `xs` is larger breakpoint\n\n  * `sm` {`number`} - Miniumum value for small breakpoint\n\n  * `md` {`number`} - Miniumum value for medium breakpoint\n\n  * `lg` {`number`} - Miniumum value for large breakpoint\n\n  * `xl` {`number`} - Miniumum value for extra-large breakpoint\n\n  * `disable-responsive` {`boolean`} - \n\nProperties:\n\n  * `ariaLabel` {`string`} - \n\n  * `activeTab` {`string`} - id of active tab\n\n  * `iconBreakpoint` {`number`} - Optional minimum breakpoint for showing tab text with icons, or\nDefault is always text with icons.\n`-1` forces icon-only mode.\n\n  * `id` {`string`} - unique identifier/anchor for tabbed interface\n\n  * `layoutBreakpoint` {`number`} - Optional minimum breakpoint for horizontal layout of tabs.\nDefault is unset (always horizontal).\n`-1` forces vertical-only mode.\n\n  * `sticky` {`boolean`} - whether tabs are sticky\n\n  * `__tabButtons` {`any[]`} - an array of tab buttons\n\n  * `buttons` {`NodeListOf<Element> | undefined`} - \n\n  * `iconsOnly` {`boolean`} - determines if tabs should show icons only\n\n  * `observer` - mutation observer for tabs\n\n  * `tabQuery` {`string`} - query selector for tabs\noverride this for custom elements that extend a11y-tabs\n\n  * `tabs` - array of tabs\n\n  * `vertical` {`boolean`} - determines whether tabs should be in vertical layout\n\n  * `fullWidth` {`boolean`} - if tabs should be full width or not\n\n  * `disabled` {`boolean`} - whether tabbed interface is disabled\n\n  * `hidden` {`boolean`} - whether tabbed interface is hidden\n\n  * `__tabs` {`any[]`} - an array of tab data based on slotted `a11y-tab` elements\n\n  * `__tabFocus` {`number`} - which tab button has ketboard focus\n\n  * `responsiveWidth` {`number`} - width in pixels\n\n  * `responsiveSize` {`string`} - size of tabs,\nwhere `xs` is smaller breakpoint\nand `xs` is larger breakpoint\n\n  * `sm` {`number`} - Miniumum value for small breakpoint\n\n  * `md` {`number`} - Miniumum value for medium breakpoint\n\n  * `lg` {`number`} - Miniumum value for large breakpoint\n\n  * `xl` {`number`} - Miniumum value for extra-large breakpoint\n\n  * `disableResponsive` {`boolean`} - ",
      "attributes": [
        {
          "name": "aria-label",
          "description": "`aria-label` {`string`} - \n\nProperty: ariaLabel"
        },
        {
          "name": "active-tab",
          "description": "`active-tab` {`string`} - id of active tab\n\nProperty: activeTab"
        },
        {
          "name": "icon-breakpoint",
          "description": "`icon-breakpoint` {`number`} - Optional minimum breakpoint for showing tab text with icons, or\nDefault is always text with icons.\n`-1` forces icon-only mode.\n\nProperty: iconBreakpoint"
        },
        {
          "name": "id",
          "description": "`id` {`string`} - unique identifier/anchor for tabbed interface\n\nProperty: id"
        },
        {
          "name": "layout-breakpoint",
          "description": "`layout-breakpoint` {`number`} - Optional minimum breakpoint for horizontal layout of tabs.\nDefault is unset (always horizontal).\n`-1` forces vertical-only mode.\n\nProperty: layoutBreakpoint"
        },
        {
          "name": "sticky",
          "description": "`sticky` {`boolean`} - whether tabs are sticky\n\nProperty: sticky",
          "valueSet": "v"
        },
        {
          "name": "__tabButtons",
          "description": "`__tabButtons` {`any[]`} - an array of tab buttons\n\nProperty: __tabButtons"
        },
        {
          "name": "full-width",
          "description": "`full-width` {`boolean`} - if tabs should be full width or not\n\nProperty: fullWidth\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "disabled",
          "description": "`disabled` {`boolean`} - whether tabbed interface is disabled\n\nProperty: disabled\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "hidden",
          "description": "`hidden` {`boolean`} - whether tabbed interface is hidden\n\nProperty: hidden\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "__tabs",
          "description": "`__tabs` {`any[]`} - an array of tab data based on slotted `a11y-tab` elements\n\nProperty: __tabs\n\nDefault: "
        },
        {
          "name": "__tabFocus",
          "description": "`__tabFocus` {`number`} - which tab button has ketboard focus\n\nProperty: __tabFocus\n\nDefault: 0"
        },
        {
          "name": "responsive-width",
          "description": "`responsive-width` {`number`} - width in pixels\n\nProperty: responsiveWidth"
        },
        {
          "name": "responsive-size",
          "description": "`responsive-size` {`string`} - size of tabs,\nwhere `xs` is smaller breakpoint\nand `xs` is larger breakpoint\n\nProperty: responsiveSize\n\nDefault: xs"
        },
        {
          "name": "sm",
          "description": "`sm` {`number`} - Miniumum value for small breakpoint\n\nProperty: sm\n\nDefault: 600"
        },
        {
          "name": "md",
          "description": "`md` {`number`} - Miniumum value for medium breakpoint\n\nProperty: md\n\nDefault: 900"
        },
        {
          "name": "lg",
          "description": "`lg` {`number`} - Miniumum value for large breakpoint\n\nProperty: lg\n\nDefault: 1200"
        },
        {
          "name": "xl",
          "description": "`xl` {`number`} - Miniumum value for extra-large breakpoint\n\nProperty: xl\n\nDefault: 1500"
        },
        {
          "name": "disable-responsive",
          "description": "`disable-responsive` {`boolean`} - \n\nProperty: disableResponsive\n\nDefault: false",
          "valueSet": "v"
        },
        {
          "name": "ona11y-tabs-active-changed",
          "description": "`a11y-tabs-active-changed` {`CustomEvent<this>`} - "
        },
        {
          "name": "onresponsive-element",
          "description": "`responsive-element` {`CustomEvent<{ attribute: string; custom: string; element: this; sm: number; md: number; lg: number; xl: number; }>`} - "
        },
        {
          "name": "onresponsive-element-deleted",
          "description": "`responsive-element-deleted` {`CustomEvent<this>`} - "
        }
      ]
    }
  ],
  "globalAttributes": [],
  "valueSets": []
}
